<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataFormat" xml:space="preserve">
    <value>dd-MM-yyyy</value>
    <comment>The format used for all date related items</comment>
  </data>
  <data name="DataFormatWithTime" xml:space="preserve">
    <value>F</value>
    <comment>The format used for all date/time related items</comment>
  </data>
  <data name="NameLessFileName" xml:space="preserve">
    <value>Sem nome</value>
    <comment>Normally Outlook will use the subject of a MSG object as it's filename. Invalid characters are replaced by spaces. When there is no subject outlook uses "Nameless" as default</comment>
  </data>
  <data name="AppointmentAttachmentsLabel" xml:space="preserve">
    <value>Anexos</value>
  </data>
  <data name="AppointmentCategoriesLabel" xml:space="preserve">
    <value>Categorias</value>
  </data>
  <data name="AppointmentClientIntentCanceledText" xml:space="preserve">
    <value>Recusado</value>
  </data>
  <data name="AppointmentClientIntentDelegateText" xml:space="preserve">
    <value>Atuando como delegado do organizador da reunião</value>
  </data>
  <data name="AppointmentClientIntentDeletedExceptionWithNoResponseText" xml:space="preserve">
    <value>Exceção excluída sem resposta</value>
  </data>
  <data name="AppointmentClientIntentDeletedWithNoResponseText" xml:space="preserve">
    <value>Reunião excluída sem resposta</value>
  </data>
  <data name="AppointmentClientIntentExceptionCanceledText" xml:space="preserve">
    <value>Recusado</value>
  </data>
  <data name="AppointmentClientIntentLabel" xml:space="preserve">
    <value>Status de reunião</value>
  </data>
  <data name="AppointmentClientIntentManagerText" xml:space="preserve">
    <value>Organizador da reunião</value>
  </data>
  <data name="AppointmentClientIntentModifiedEndTimeText" xml:space="preserve">
    <value>Horário de término modificado</value>
  </data>
  <data name="AppointmentClientIntentModifiedLocationText" xml:space="preserve">
    <value>Local modificado</value>
  </data>
  <data name="AppointmentClientIntentModifiedStartTimeText" xml:space="preserve">
    <value>Horário de início modificado</value>
  </data>
  <data name="AppointmentClientIntentRespondedAcceptText" xml:space="preserve">
    <value>Aceito</value>
  </data>
  <data name="AppointmentClientIntentRespondedDeclineText" xml:space="preserve">
    <value>Recusado</value>
  </data>
  <data name="AppointmentClientIntentRespondedExceptionDeclineText" xml:space="preserve">
    <value>Exceção recusada</value>
  </data>
  <data name="AppointmentClientIntentRespondedTentativeText" xml:space="preserve">
    <value>Tentativa</value>
  </data>
  <data name="AppointmentEndDateLabel" xml:space="preserve">
    <value>Fim</value>
  </data>
  <data name="AppointmentLocationLabel" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="AppointmentMandatoryParticipantsLabel" xml:space="preserve">
    <value>Participantes obrigatórios</value>
  </data>
  <data name="AppointmentOptionalParticipantsLabel" xml:space="preserve">
    <value>Participantes opcionais</value>
  </data>
  <data name="AppointmentOrganizerLabel" xml:space="preserve">
    <value>Organizador</value>
  </data>
  <data name="AppointmentReccurenceTypeDailyText" xml:space="preserve">
    <value>Diariamente</value>
  </data>
  <data name="AppointmentReccurenceTypeMonthlyText" xml:space="preserve">
    <value>Mensalmente</value>
  </data>
  <data name="AppointmentReccurenceTypeNoneText" xml:space="preserve">
    <value>Nenhum</value>
  </data>
  <data name="AppointmentReccurenceTypeWeeklyText" xml:space="preserve">
    <value>Semanalmente</value>
  </data>
  <data name="AppointmentReccurenceTypeYearlyText" xml:space="preserve">
    <value>Anualmente</value>
  </data>
  <data name="AppointmentRecurrencePaternLabel" xml:space="preserve">
    <value>Tipo de padrão de recorrência</value>
  </data>
  <data name="AppointmentRecurrenceTypeLabel" xml:space="preserve">
    <value>Padrão de recorrência</value>
  </data>
  <data name="AppointmentResourcesLabel" xml:space="preserve">
    <value>Recursos</value>
  </data>
  <data name="AppointmentStartDateLabel" xml:space="preserve">
    <value>Iniciar</value>
  </data>
  <data name="AppointmentSubjectLabel" xml:space="preserve">
    <value>Assunto</value>
  </data>
  <data name="AssistantLabel" xml:space="preserve">
    <value>Assistente</value>
  </data>
  <data name="AssistantTelephoneNumberLabel" xml:space="preserve">
    <value>Assistente</value>
  </data>
  <data name="BeeperTelephoneNumberLabel" xml:space="preserve">
    <value>Pager</value>
  </data>
  <data name="BirthdayLabel" xml:space="preserve">
    <value>Aniversário</value>
  </data>
  <data name="BusinessFaxNumberLabel" xml:space="preserve">
    <value>Fax comercial</value>
  </data>
  <data name="BusinessTelephoneNumber2Label" xml:space="preserve">
    <value>Comercial 2</value>
  </data>
  <data name="BusinessTelephoneNumberLabel" xml:space="preserve">
    <value>Comercial</value>
  </data>
  <data name="CallbackTelephoneNumberLabel" xml:space="preserve">
    <value>Retorno de chamada</value>
  </data>
  <data name="CarTelephoneNumberLabel" xml:space="preserve">
    <value>Carro</value>
  </data>
  <data name="CellularTelephoneNumberLabel" xml:space="preserve">
    <value>Celular</value>
  </data>
  <data name="CompanyLabel" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="CompanyMainTelephoneNumberLabel" xml:space="preserve">
    <value>Telefone principal da empresa</value>
  </data>
  <data name="DateDifferenceDaysText" xml:space="preserve">
    <value>dias</value>
  </data>
  <data name="DateDifferenceDayText" xml:space="preserve">
    <value>dia</value>
  </data>
  <data name="DateDifferenceHoursText" xml:space="preserve">
    <value>horas</value>
  </data>
  <data name="DateDifferenceHourText" xml:space="preserve">
    <value>hora</value>
  </data>
  <data name="DateDifferenceMinutesText" xml:space="preserve">
    <value>minutos</value>
  </data>
  <data name="DateDifferenceMinuteText" xml:space="preserve">
    <value>minuto</value>
  </data>
  <data name="DateDifferenceMonthsText" xml:space="preserve">
    <value>meses</value>
  </data>
  <data name="DateDifferenceMonthText" xml:space="preserve">
    <value>mês</value>
  </data>
  <data name="DateDifferenceSecondsText" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="DateDifferenceSecondText" xml:space="preserve">
    <value>segundo</value>
  </data>
  <data name="DateDifferenceWeeksText" xml:space="preserve">
    <value>semanas</value>
  </data>
  <data name="DateDifferenceWeekText" xml:space="preserve">
    <value>semana</value>
  </data>
  <data name="DateDifferenceYearsText" xml:space="preserve">
    <value>anos</value>
  </data>
  <data name="DateDifferenceYearText" xml:space="preserve">
    <value>ano</value>
  </data>
  <data name="DepartmentLabel" xml:space="preserve">
    <value>Departamento</value>
  </data>
  <data name="DisplayNameLabel" xml:space="preserve">
    <value>Nome completo</value>
  </data>
  <data name="Email1DisplayNameLabel" xml:space="preserve">
    <value>Exibir email como</value>
  </data>
  <data name="Email1EmailAddressLabel" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email2DisplayNameLabel" xml:space="preserve">
    <value>Exibir email 2 como</value>
  </data>
  <data name="Email2EmailAddressLabel" xml:space="preserve">
    <value>Email 2</value>
  </data>
  <data name="Email3DisplayNameLabel" xml:space="preserve">
    <value>Exibir email 3 como</value>
  </data>
  <data name="Email3EmailAddressLabel" xml:space="preserve">
    <value>Email 3</value>
  </data>
  <data name="EmailAttachmentsLabel" xml:space="preserve">
    <value>Anexos</value>
  </data>
  <data name="EmailBccLabel" xml:space="preserve">
    <value>Cco</value>
  </data>
  <data name="EmailCategoriesLabel" xml:space="preserve">
    <value>Categorias</value>
  </data>
  <data name="EmailCcLabel" xml:space="preserve">
    <value>CC</value>
  </data>
  <data name="EmailFollowUpCompletedText" xml:space="preserve">
    <value>Concluído</value>
  </data>
  <data name="EmailFollowUpFlag" xml:space="preserve">
    <value>Sinalizador</value>
  </data>
  <data name="EmailFollowUpLabel" xml:space="preserve">
    <value>Acompanhamento</value>
  </data>
  <data name="EmailFollowUpStatusLabel" xml:space="preserve">
    <value>Status de acompanhamento</value>
  </data>
  <data name="EmailFromLabel" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="EmailSentOnLabel" xml:space="preserve">
    <value>Enviado em</value>
  </data>
  <data name="EmailSignedBy" xml:space="preserve">
    <value>Assinado por</value>
  </data>
  <data name="EmailSignedByOn" xml:space="preserve">
    <value>Em</value>
  </data>
  <data name="EmailSubjectLabel" xml:space="preserve">
    <value>Assunto</value>
  </data>
  <data name="EmailToLabel" xml:space="preserve">
    <value>Para</value>
  </data>
  <data name="FunctionLabel" xml:space="preserve">
    <value>Cargo</value>
  </data>
  <data name="GivenNameLabel" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="HomeAddressLabel" xml:space="preserve">
    <value>Endereço residencial</value>
  </data>
  <data name="HomeFaxNumberLabel" xml:space="preserve">
    <value>Fax residencial</value>
  </data>
  <data name="HomeTelephoneNumber2Label" xml:space="preserve">
    <value>Residencial 2</value>
  </data>
  <data name="HomeTelephoneNumberLabel" xml:space="preserve">
    <value>Início</value>
  </data>
  <data name="HtmlLabel" xml:space="preserve">
    <value>Página da web</value>
  </data>
  <data name="ImportanceHighText" xml:space="preserve">
    <value>Alto</value>
  </data>
  <data name="ImportanceLabel" xml:space="preserve">
    <value>Urgente</value>
  </data>
  <data name="ImportanceLowText" xml:space="preserve">
    <value>Baixo</value>
  </data>
  <data name="InstantMessagingAddressLabel" xml:space="preserve">
    <value>Endereço de mens. instantâneas</value>
  </data>
  <data name="ISDNNumberLabel" xml:space="preserve">
    <value>ISDN</value>
  </data>
  <data name="OtherAddressLabel" xml:space="preserve">
    <value>Outro endereço</value>
  </data>
  <data name="OtherFaxLabel" xml:space="preserve">
    <value>Outro fax</value>
  </data>
  <data name="OtherTelephoneNumberLabel" xml:space="preserve">
    <value>Outro</value>
  </data>
  <data name="PrimaryFaxNumberLabel" xml:space="preserve">
    <value>Outro fax</value>
  </data>
  <data name="PrimaryTelephoneNumberLabel" xml:space="preserve">
    <value>Telefone principal</value>
  </data>
  <data name="ProfessionLabel" xml:space="preserve">
    <value>Profissão</value>
  </data>
  <data name="RadioTelephoneNumberLabel" xml:space="preserve">
    <value>Rádio</value>
  </data>
  <data name="SpouseNameLabel" xml:space="preserve">
    <value>Cônjuge/parceiro</value>
  </data>
  <data name="StickyNoteDateLabel" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="SurNameLabel" xml:space="preserve">
    <value>Sobrenome</value>
  </data>
  <data name="TaskActualEffortLabel" xml:space="preserve">
    <value>Trabalho real</value>
  </data>
  <data name="TaskBillingInformationLabel" xml:space="preserve">
    <value>Informações de cobrança</value>
  </data>
  <data name="TaskCompanyLabel" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="TaskContactsLabel" xml:space="preserve">
    <value>Contatos</value>
  </data>
  <data name="TaskDateCompleted" xml:space="preserve">
    <value>Concluído em</value>
  </data>
  <data name="TaskDueDateLabel" xml:space="preserve">
    <value>Data de conclusão</value>
  </data>
  <data name="TaskEstimatedEffortLabel" xml:space="preserve">
    <value>Trabalho estimado</value>
  </data>
  <data name="TaskMileageLabel" xml:space="preserve">
    <value>Quilometragem</value>
  </data>
  <data name="TaskOwnerLabel" xml:space="preserve">
    <value>Proprietário</value>
  </data>
  <data name="TaskPercentageCompleteLabel" xml:space="preserve">
    <value>Percentual concluído</value>
  </data>
  <data name="TaskRequestedByLabel" xml:space="preserve">
    <value>Solicitada por</value>
  </data>
  <data name="TaskStartDateLabel" xml:space="preserve">
    <value>Data de início</value>
  </data>
  <data name="TaskStatusCompleteText" xml:space="preserve">
    <value>Concluído</value>
  </data>
  <data name="TaskStatusInProgressText" xml:space="preserve">
    <value>Em andamento</value>
  </data>
  <data name="TaskStatusLabel" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TaskStatusNotStartedText" xml:space="preserve">
    <value>Não iniciado</value>
  </data>
  <data name="TaskStatusWaitingText" xml:space="preserve">
    <value>Aguardando</value>
  </data>
  <data name="TaskSubjectLabel" xml:space="preserve">
    <value>Assunto</value>
  </data>
  <data name="TelexNumberLabel" xml:space="preserve">
    <value>Telex</value>
  </data>
  <data name="TextTelephoneLabel" xml:space="preserve">
    <value>Telefone TTY/TDD</value>
  </data>
  <data name="WeddingAnniversaryLabel" xml:space="preserve">
    <value>Data especial</value>
  </data>
  <data name="WorkAddressLabel" xml:space="preserve">
    <value>Endereço comercial</value>
  </data>
  <data name="EmailOnBehalfOf" xml:space="preserve">
    <value>Em nome de</value>
  </data>
  <data name="OwnerReactionHistory" xml:space="preserve">
    <value>Histórico de reações do proprietário</value>
  </data>
  <data name="ReactionsSummary" xml:space="preserve">
    <value>Resumo das reações</value>
  </data>
</root>